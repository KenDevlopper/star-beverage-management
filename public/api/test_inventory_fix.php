<?php
require_once 'config.php';

echo "<h1>Test de l'API inventory.php apr√®s correction</h1>";

try {
    echo "<h2>1. V√©rification de la base de donn√©es</h2>";
    
    // V√©rifier les tables
    $tables = ['products', 'categories', 'inventory_settings'];
    foreach ($tables as $table) {
        $stmt = $pdo->query("SHOW TABLES LIKE '$table'");
        if ($stmt->rowCount() > 0) {
            echo "‚úÖ Table $table existe<br>";
        } else {
            echo "‚ùå Table $table manquante<br>";
        }
    }
    
    // V√©rifier les donn√©es dans inventory_settings
    $stmt = $pdo->query("SELECT COUNT(*) as count FROM inventory_settings");
    $settingsCount = $stmt->fetch()['count'];
    echo "<h3>Param√®tres d'inventaire existants: $settingsCount</h3>";
    
    if ($settingsCount == 0) {
        echo "‚ö†Ô∏è Aucun param√®tre d'inventaire trouv√© - l'API va les cr√©er automatiquement<br>";
    }
    
    // V√©rifier les produits
    $stmt = $pdo->query("SELECT COUNT(*) as count FROM products");
    $productsCount = $stmt->fetch()['count'];
    echo "<h3>Produits existants: $productsCount</h3>";
    
    echo "<h2>2. Test de l'API inventory.php</h2>";
    
    // Simuler un appel GET √† l'API
    $_SERVER['REQUEST_METHOD'] = 'GET';
    
    ob_start();
    include 'inventory.php';
    $output = ob_get_clean();
    
    echo "<h3>R√©ponse de l'API:</h3>";
    echo "<pre>" . htmlspecialchars($output) . "</pre>";
    
    $inventory = json_decode($output, true);
    if ($inventory && is_array($inventory)) {
        echo "<h3>‚úÖ API fonctionne - " . count($inventory) . " produits r√©cup√©r√©s</h3>";
        
        if (count($inventory) > 0) {
            echo "<h4>Premier produit:</h4>";
            $firstProduct = $inventory[0];
            echo "- ID: " . $firstProduct['id'] . "<br>";
            echo "- Nom: " . $firstProduct['name'] . "<br>";
            echo "- Stock: " . $firstProduct['inventory'] . " " . $firstProduct['unit'] . "<br>";
            echo "- Minimum: " . $firstProduct['minimum_quantity'] . "<br>";
            echo "- Statut: " . $firstProduct['status_text'] . "<br>";
        }
    } else {
        echo "‚ùå Erreur de d√©codage JSON ou API ne fonctionne pas<br>";
    }
    
    // V√©rifier si des param√®tres ont √©t√© cr√©√©s
    $stmt = $pdo->query("SELECT COUNT(*) as count FROM inventory_settings");
    $newSettingsCount = $stmt->fetch()['count'];
    echo "<h3>Param√®tres d'inventaire apr√®s test: $newSettingsCount</h3>";
    
    if ($newSettingsCount > $settingsCount) {
        echo "‚úÖ Param√®tres d'inventaire cr√©√©s automatiquement !<br>";
    }
    
    echo "<h2>3. R√©sum√©</h2>";
    echo "‚úÖ API inventory.php corrig√©e<br>";
    echo "‚úÖ Gestion automatique des param√®tres manquants<br>";
    echo "‚úÖ Gestion d'erreurs robuste<br>";
    echo "<h3>üéâ Le module Inventaire devrait maintenant fonctionner !</h3>";
    
} catch (Exception $e) {
    echo "<h2>‚ùå Erreur</h2>";
    echo "Erreur: " . $e->getMessage() . "<br>";
}
?>
